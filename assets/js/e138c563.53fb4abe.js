(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[226],{5318:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),g=o,y=m["".concat(c,".").concat(g)]||m[g]||u[g]||i;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6563:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var r=n(9603),o=n(120),i=(n(7378),n(5318)),a=["components"],l={sidebar_label:"Polygon",sidebar_position:6},c={unversionedId:"geometries/polygon",id:"geometries/polygon",isDocsHomePage:!1,title:"Polygon",description:"Example",source:"@site/docs/geometries/polygon.mdx",sourceDirName:"geometries",slug:"/geometries/polygon",permalink:"/react-maptalks/docs/geometries/polygon",editUrl:"https://github.com/sxyhappy/react-maptalks/tree/master/packages/docs/docs/geometries/polygon.mdx",version:"current",sidebar_label:"Polygon",sidebarPosition:6,frontMatter:{sidebar_label:"Polygon",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"LineString",permalink:"/react-maptalks/docs/geometries/line-string"},next:{title:"Rectangle",permalink:"/react-maptalks/docs/geometries/rectangle"}},s=[{value:"Example",id:"example",children:[]}],p={toc:s};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},"function PolygonExample() {\n  const view = { center: [-0.113049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n  const polygonConfig = {\n    symbol: {\n      'lineColor' : '#34495e',\n      'lineWidth' : 2,\n      'polygonFill' : 'rgb(135,196,240)',\n      'polygonOpacity' : 0.6\n    },\n    coordinates: [\n      [\n        [-0.131049, 51.498568],\n        [-0.107049, 51.498568],\n        [-0.107049, 51.493568],\n        [-0.131049, 51.493568],\n        [-0.131049, 51.498568]\n      ]\n    ],\n  }\n\n  return (\n    <>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view} style={{height: 400}}>\n        <MtTileLayer\n          id={\"base\"}\n          urlTemplate=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n          subdomains={['a','b','c','d']}\n          attribution={'&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'}\n        />\n\n        <MtVectorLayer id={'vector'}>\n          <MtPolygon {...polygonConfig} visible={visible} />\n        </MtVectorLayer>\n      </MtMap>\n    </>\n  )\n}\n\n")))}u.isMDXComponent=!0}}]);