(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[379],{5318:function(e,r,t){"use strict";t.d(r,{Zo:function(){return s},kt:function(){return b}});var n=t(7378);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=n.createContext({}),l=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=l(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=l(t),b=i,d=m["".concat(u,".").concat(b)]||m[b]||p[b]||a;return t?n.createElement(d,o(o({ref:r},s),{},{components:t})):n.createElement(d,o({ref:r},s))}));function b(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6090:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var n=t(9603),i=t(120),a=(t(7378),t(5318)),o=["components"],c={sidebar_label:"CubicBezierCurve",sidebar_position:9},u={unversionedId:"geometries/cubic-bezier-curve",id:"geometries/cubic-bezier-curve",isDocsHomePage:!1,title:"CubicBezierCurve",description:"Example",source:"@site/docs/geometries/cubic-bezier-curve.mdx",sourceDirName:"geometries",slug:"/geometries/cubic-bezier-curve",permalink:"/react-maptalks/docs/geometries/cubic-bezier-curve",editUrl:"https://github.com/sxyhappy/react-maptalks/tree/master/packages/docs/docs/geometries/cubic-bezier-curve.mdx",version:"current",sidebar_label:"CubicBezierCurve",sidebarPosition:9,frontMatter:{sidebar_label:"CubicBezierCurve",sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"ArcCurve",permalink:"/react-maptalks/docs/geometries/arc-curve"},next:{title:"QuadBezierCurve",permalink:"/react-maptalks/docs/geometries/quad-bezier-curve"}},l=[{value:"Example",id:"example",children:[]}],s={toc:l};function p(e){var r=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},"function CubicBezierCurveExample() {\n  const view = { center: [-0.133049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n  const c = new maptalks.Coordinate(-0.113049, 51.49856);\n  const cubicBezierCurveConfig = {\n    symbol: [\n      {\n        lineColor: '#34495e',\n        lineWidth: 3\n      },\n      {\n        markerType : 'ellipse',\n        markerWidth : 8,\n        markerHeight : 8,\n        markerFill : '#f00',\n        markerPlacement : 'vertex'\n      },\n      {\n        textName : 'CubicBezierCurve',\n        textFill : '#f00',\n        textWeight : 'bold',\n        textHaloColor : '#fff',\n        textHaloRadius : 3,\n        textSize : 20,\n        textWrapCharacter : '\\n'\n      }\n    ],\n    coordinates: [\n      c.add(-0.0202, 0.0081),\n      c.add(-0.0269, 0.0069),\n      c.add(-0.0369, 0.0032),\n      c.add(-0.0314, -0.003),\n      c.add(-0.0278, -0.008),\n      c.add(-0.0220, -0.009)\n    ],\n  }\n\n  return (\n    <>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view} style={{height: 400}}>\n        <MtTileLayer\n          id={\"base\"}\n          urlTemplate=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n          subdomains={['a','b','c','d']}\n          attribution={'&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'}\n        />\n\n        <MtVectorLayer id={'vector'}>\n          <MtCubicBezierCurve {...cubicBezierCurveConfig} visible={visible} />\n        </MtVectorLayer>\n      </MtMap>\n    </>\n  )\n}\n\n")))}p.isMDXComponent=!0}}]);