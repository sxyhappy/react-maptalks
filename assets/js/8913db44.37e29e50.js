(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[313],{876:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),y=s(r),d=a,m=y["".concat(l,".").concat(d)]||y[d]||u[d]||o;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},4348:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var n=r(7560),a=r(8283),o=(r(2784),r(876)),i=["components"],c={sidebar_label:"ParticleLayer",sidebar_position:5},l={unversionedId:"layers/particle-layer",id:"layers/particle-layer",isDocsHomePage:!1,title:"ParticleLayer",description:"Example",source:"@site/docs/layers/particle-layer.mdx",sourceDirName:"layers",slug:"/layers/particle-layer",permalink:"/react-maptalks/docs/layers/particle-layer",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/layers/particle-layer.mdx",version:"current",sidebar_label:"ParticleLayer",sidebarPosition:5,frontMatter:{sidebar_label:"ParticleLayer",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"CanvasLayer",permalink:"/react-maptalks/docs/layers/canvas-layer"},next:{title:"MtWmsLayer",permalink:"/react-maptalks/docs/layers/wms-tile-layer"}},s=[{value:"Example",id:"example",children:[]}],p={toc:s};function u(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},"function ParticleExample() {\n  const mapRef = useRef();\n  const view = { center: [-0.113049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n\n  const handleLayerReady = layer => {\n    const center = mapRef.current.getCenter();\n    const radius = 1000;\n    layer.getParticles = function (t) {\n      const point = mapRef.current.coordinateToContainerPoint(center);\n      const angle = (t / 16 % 360) * Math.PI / 180;\n      const pxLen = mapRef.current.distanceToPixel(radius, radius);\n      const r = pxLen.width;\n      const x = r * Math.cos(angle), y = r * Math.sin(angle);\n      return [\n        {\n          point : point.add(x, y),\n          r : 4,\n          color : 'rgb(135,196,240)'\n        }\n      ];\n    };\n  }\n\n  return (\n    <div style={{height: 400}}>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view} ref={mapRef}>\n        <MtTileLayer\n          id={\"base\"}\n          urlTemplate=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n          subdomains={['a','b','c','d']}\n          attribution={'&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'}\n        />\n\n        <MtParticleLayer id={'particleLayer'} onReady={handleLayerReady} visible={visible} />\n      </MtMap>\n    </div>\n  )\n}\n\n")))}u.isMDXComponent=!0}}]);