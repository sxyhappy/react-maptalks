(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[585],{5318:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return y}});var r=t(7378);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(t),y=a,f=m["".concat(s,".").concat(y)]||m[y]||u[y]||o;return t?r.createElement(f,c(c({ref:n},p),{},{components:t})):r.createElement(f,c({ref:n},p))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3530:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var r=t(9603),a=t(120),o=(t(7378),t(5318)),c=["components"],i={sidebar_label:"CanvasLayer",sidebar_position:4},s={unversionedId:"components/layers/canvas-layer",id:"components/layers/canvas-layer",isDocsHomePage:!1,title:"CanvasLayer",description:"Example",source:"@site/docs/components/layers/canvas-layer.mdx",sourceDirName:"components/layers",slug:"/components/layers/canvas-layer",permalink:"/react-maptalks/docs/components/layers/canvas-layer",editUrl:"https://github.com/sxyhappy/react-maptalks/blob/master/docs/docs/components/layers/canvas-layer.mdx",version:"current",sidebar_label:"CanvasLayer",sidebarPosition:4,frontMatter:{sidebar_label:"CanvasLayer",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"ImageLayer",permalink:"/react-maptalks/docs/components/layers/image-layer"},next:{title:"ParticleLayer",permalink:"/react-maptalks/docs/components/layers/particle-layer"}},l=[{value:"Example",id:"example",children:[]}],p={toc:l};function u(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},"function CanvasExample() {\n  const mapRef = useRef();\n  const view = { center: [-0.113049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n\n  const handleLayerReady = layer => {\n    layer.prepareToDraw = function () {\n      return ['foo', 'bar'];\n    };\n\n    layer.draw = function (context, view, param1, param2) {\n      const size = mapRef.current.getSize();\n      const str = param1 + ',' + param2;\n      context.fillStyle = '#f00';\n      context.font = 'bolder 50px sans-serif';\n      const len = context.measureText(str);\n      context.fillText(str, size.width / 2 - len.width / 2, size.height / 2);\n      this.completeRender();\n    };\n\n    layer.drawOnInteracting = function (context, view, param1, param2) {\n      this.draw(context, view, param1, param2);\n    };\n  }\n\n  return (\n    <>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view} ref={mapRef} style={{height: 400}}>\n        <MtTileLayer\n          id={\"base\"}\n          urlTemplate=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n          subdomains={['a','b','c','d']}\n          attribution={'&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'}\n        />\n\n        <MtCanvasLayer onReady={handleLayerReady} id={'canvas'} visible={visible} />\n      </MtMap>\n    </>\n  )\n}\n\n")))}u.isMDXComponent=!0}}]);