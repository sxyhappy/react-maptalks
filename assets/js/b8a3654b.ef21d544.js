(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[547],{5318:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7378);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,c(c({ref:t},u),{},{components:r})):n.createElement(f,c({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7824:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l},default:function(){return p}});var n=r(9603),o=r(120),a=(r(7378),r(5318)),c=["components"],i={sidebar_label:"ArcCurve",sidebar_position:8},s={unversionedId:"components/geometries/arc-curve",id:"components/geometries/arc-curve",isDocsHomePage:!1,title:"ArcCurve",description:"Example",source:"@site/docs/components/geometries/arc-curve.mdx",sourceDirName:"components/geometries",slug:"/components/geometries/arc-curve",permalink:"/react-maptalks/docs/components/geometries/arc-curve",editUrl:"https://github.com/sxyhappy/react-maptalks/blob/master/docs/docs/components/geometries/arc-curve.mdx",version:"current",sidebar_label:"ArcCurve",sidebarPosition:8,frontMatter:{sidebar_label:"ArcCurve",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Rectangle",permalink:"/react-maptalks/docs/components/geometries/rectangle"},next:{title:"CubicBezierCurve",permalink:"/react-maptalks/docs/components/geometries/cubic-bezier-curve"}},l=[{value:"Example",id:"example",children:[]}],u={toc:l};function p(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},"function ArcCurveExample() {\n  const view = { center: [-0.133049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n  const c = new maptalks.Coordinate(-0.113049, 51.49856);\n  const arcCurveConfig = {\n    symbol: [\n      {\n        lineColor: '#34495e',\n        lineWidth: 3\n      },\n      {\n        markerType : 'ellipse',\n        markerWidth : 8,\n        markerHeight : 8,\n        markerFill : '#f00',\n        markerPlacement : 'vertex'\n      },\n      {\n        textName : 'ArcCurve',\n        textFill : '#f00',\n        textWeight : 'bold',\n        textHaloColor : '#fff',\n        textHaloRadius : 3,\n        textSize : 20,\n        textWrapCharacter : '\\n'\n      }\n    ],\n    coordinates: [\n      c.add(-0.0202, 0.0081),\n      c.add(-0.0269, 0.0069),\n      c.add(-0.0369, 0.0032),\n      c.add(-0.0314, -0.003),\n      c.add(-0.0278, -0.008),\n      c.add(-0.0220, -0.009)\n    ],\n  }\n\n  return (\n    <>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view} style={{height: 400}}>\n        <MtTileLayer\n          id={\"base\"}\n          urlTemplate=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n          subdomains={['a','b','c','d']}\n          attribution={'&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'}\n        />\n\n        <MtVectorLayer id={'vector'}>\n          <MtArcCurve {...arcCurveConfig} visible={visible} />\n        </MtVectorLayer>\n      </MtMap>\n    </>\n  )\n}\n\n")))}p.isMDXComponent=!0}}]);