(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[29],{3437:function(e,r,n){"use strict";n.r(r),n.d(r,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return m},default:function(){return p}});var t=n(7560),a=n(8283),o=(n(2784),n(876)),s=["components"],i={sidebar_label:"VectorLayer",sidebar_position:3},c={unversionedId:"components/vector-layer",id:"components/vector-layer",isDocsHomePage:!1,title:"MtWmsLayer",description:"Example",source:"@site/docs/components/vector-layer.mdx",sourceDirName:"components",slug:"/components/vector-layer",permalink:"/react-maptalks/docs/components/vector-layer",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/components/vector-layer.mdx",version:"current",sidebar_label:"VectorLayer",sidebarPosition:3,frontMatter:{sidebar_label:"VectorLayer",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"MtWmsLayer",permalink:"/react-maptalks/docs/components/wms-tile-layer"},next:{title:"CanvasLayer",permalink:"/react-maptalks/docs/components/canvas-layer"}},m=[{value:"Example",id:"example",children:[]}],l={toc:m};function p(e){var r=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,t.Z)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},"\nfunction WmsExample() {\n  const mapRef = useRef();\n  const view = { center: [-0.113049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n  const [geometries, setGeometries] = useState([]);\n\n  const vectorLayerReady = () => {\n    const center = mapRef.current.getCenter();\n    const marker1 = new maptalks.Marker(center.sub(0.020, 0), {\n      'symbol': {\n        'markerType': 'ellipse',\n        'markerFill': 'rgb(135,196,240)',\n        'markerFillOpacity': 1,\n        'markerLineColor': '#34495e',\n        'markerLineWidth': 3,\n        'markerLineOpacity': 1,\n        'markerLineDasharray':[],\n        'markerWidth': 40,\n        'markerHeight': 40,\n        'markerDx': 0,\n        'markerDy': 0,\n        'markerOpacity' : 1\n      }\n    });\n    const marker2 = new maptalks.Marker(center.add(0.02, 0), {\n      'symbol': {\n        'markerType': 'cross',\n        'markerFill': 'rgb(135,196,240)',\n        'markerFillOpacity': 1,\n        'markerLineColor': '#34495e',\n        'markerLineWidth': 3,\n        'markerLineOpacity': 1,\n        'markerLineDasharray':[],\n        'markerWidth': 40,\n        'markerHeight': 40,\n        'markerDx': 0,\n        'markerDy': 0,\n        'markerOpacity' : 1\n      }\n    });\n\n    setGeometries([marker1, marker2]);\n  }\n\n  return (\n    <div style={{height: 400}}>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view} ref={mapRef}>\n        <MtTileLayer\n          id={\"base\"}\n          urlTemplate=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n          subdomains={['a','b','c','d']}\n          attribution={'&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'}\n        />\n        <MtVectorLayer\n          id={'vector'}\n          ref={vectorLayerReady}\n          geometries={geometries}\n          visible={visible}\n        />\n      </MtMap>\n    </div>\n  )\n}\n\n")))}p.isMDXComponent=!0}}]);