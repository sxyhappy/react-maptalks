(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[163],{876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),y=a,f=m["".concat(s,".").concat(y)]||m[y]||u[y]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2193:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var r=n(7560),a=n(8283),o=(n(2784),n(876)),i=["components"],c={sidebar_label:"CanvasLayer",sidebar_position:4},s={unversionedId:"layers/canvas-layer",id:"layers/canvas-layer",isDocsHomePage:!1,title:"CanvasLayer",description:"Example",source:"@site/docs/layers/canvas-layer.mdx",sourceDirName:"layers",slug:"/layers/canvas-layer",permalink:"/react-maptalks/docs/layers/canvas-layer",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/layers/canvas-layer.mdx",version:"current",sidebar_label:"CanvasLayer",sidebarPosition:4,frontMatter:{sidebar_label:"CanvasLayer",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"ImageLayer",permalink:"/react-maptalks/docs/layers/image-layer"},next:{title:"ParticleLayer",permalink:"/react-maptalks/docs/layers/particle-layer"}},l=[{value:"Example",id:"example",children:[]}],p={toc:l};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},"function CanvasExample() {\n  const mapRef = useRef();\n  const view = { center: [-0.113049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n\n  const handleLayerReady = layer => {\n    layer.prepareToDraw = function () {\n      return ['foo', 'bar'];\n    };\n\n    layer.draw = function (context, view, param1, param2) {\n      const size = mapRef.current.getSize();\n      const str = param1 + ',' + param2;\n      context.fillStyle = '#f00';\n      context.font = 'bolder 50px sans-serif';\n      const len = context.measureText(str);\n      context.fillText(str, size.width / 2 - len.width / 2, size.height / 2);\n      this.completeRender();\n    };\n\n    layer.drawOnInteracting = function (context, view, param1, param2) {\n      this.draw(context, view, param1, param2);\n    };\n  }\n\n  return (\n    <div style={{height: 400}}>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view} ref={mapRef}>\n        <MtTileLayer\n          id={\"base\"}\n          urlTemplate=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n          subdomains={['a','b','c','d']}\n          attribution={'&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'}\n        />\n\n        <MtCanvasLayer onReady={handleLayerReady} id={'canvas'} visible={visible} />\n      </MtMap>\n    </div>\n  )\n}\n\n")))}u.isMDXComponent=!0}}]);