(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[315],{5318:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7378);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(t),f=o,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||i;return t?r.createElement(d,a(a({ref:n},p),{},{components:t})):r.createElement(d,a({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3819:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var r=t(9603),o=t(120),i=(t(7378),t(5318)),a=["components"],c={sidebar_label:"InfoWindow",sidebar_position:1},s={unversionedId:"components/ui/infoWindow",id:"components/ui/infoWindow",isDocsHomePage:!1,title:"InfoWindow",description:"Example",source:"@site/docs/components/ui/infoWindow.mdx",sourceDirName:"components/ui",slug:"/components/ui/infoWindow",permalink:"/react-maptalks/docs/components/ui/infoWindow",editUrl:"https://github.com/sxyhappy/react-maptalks/blob/master/docs/docs/components/ui/infoWindow.mdx",version:"current",sidebar_label:"InfoWindow",sidebarPosition:1,frontMatter:{sidebar_label:"InfoWindow",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/react-maptalks/docs/components/controls/overview"},next:{title:"ThreeLayer",permalink:"/react-maptalks/docs/components/plugins/three-layer"}},l=[{value:"Example",id:"example",children:[]}],p={toc:l};function u(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},'function InfoWindowExample() {\n  const view = { center: [-0.113049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n  const profile = {\n    "feature": {\n      "type": "Feature",\n      "id" : "point1",\n      "geometry": {"type": "Point", "coordinates": [-0.116049,51.59856]},\n      "properties": {"prop0": "value0"}\n    },\n    "options":{\n      "draggable" : true\n    },\n    "symbol":{\n      "markerFile"  : "https://maptalks.org/examples/en/style/image-marker/raw/1.png",\n      \'markerWidth\'  : 28,\n      \'markerHeight\' : 40,\n      \'markerDx\'     : 0,\n      \'markerDy\'     : 0,\n      \'markerOpacity\': 1\n    }\n  }\n\n  return (\n    <div style={{height: 400}}>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view}>\n        <MtTileLayer\n          id={"base"}\n          urlTemplate="https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png"\n          subdomains={[\'a\',\'b\',\'c\',\'d\']}\n          attribution={\'&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>\'}\n        />\n\n        <MtVectorLayer id={\'vector\'}>\n          <MtGeometry profile={profile} visible={visible}>\n            <MtInfoWindow title={\'infoTitle\'}><>content</></MtInfoWindow>\n          </MtGeometry>\n        </MtVectorLayer>\n\n        <MtInfoWindow single={false} title={\'infoTitle\'}><>content</></MtInfoWindow>\n      </MtMap>\n    </div>\n  )\n}\n\n')))}u.isMDXComponent=!0}}]);