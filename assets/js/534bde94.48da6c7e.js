(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[255],{876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(n),m=o,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9792:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var r=n(7560),o=n(8283),i=(n(2784),n(876)),a=["components"],c={sidebar_label:"InfoWindow",sidebar_position:1},l={unversionedId:"ui/infoWindow",id:"ui/infoWindow",isDocsHomePage:!1,title:"InfoWindow",description:"Example",source:"@site/docs/ui/infoWindow.mdx",sourceDirName:"ui",slug:"/ui/infoWindow",permalink:"/react-maptalks/docs/ui/infoWindow",editUrl:"https://github.com/sxyhappy/react-maptalks/tree/master/packages/docs/docs/ui/infoWindow.mdx",version:"current",sidebar_label:"InfoWindow",sidebarPosition:1,frontMatter:{sidebar_label:"InfoWindow",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/react-maptalks/docs/controls/overview"},next:{title:"ThreeLayer",permalink:"/react-maptalks/docs/plugins/three-layer"}},s=[{value:"Example",id:"example",children:[]}],p={toc:s};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},'function InfoWindowExample() {\n  const view = { center: [-0.113049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n  const profile = {\n    "feature": {\n      "type": "Feature",\n      "id" : "point1",\n      "geometry": {"type": "Point", "coordinates": [-0.116049,51.59856]},\n      "properties": {"prop0": "value0"}\n    },\n    "options":{\n      "draggable" : true\n    },\n    "symbol":{\n      "markerFile"  : "https://maptalks.org/examples/en/style/image-marker/raw/1.png",\n      \'markerWidth\'  : 28,\n      \'markerHeight\' : 40,\n      \'markerDx\'     : 0,\n      \'markerDy\'     : 0,\n      \'markerOpacity\': 1\n    }\n  }\n\n  return (\n    <div style={{height: 400}}>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view}>\n        <MtTileLayer\n          id={"base"}\n          urlTemplate="https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png"\n          subdomains={[\'a\',\'b\',\'c\',\'d\']}\n          attribution={\'&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>\'}\n        />\n\n        <MtVectorLayer id={\'vector\'}>\n          <MtGeometry profile={profile} visible={visible}>\n            <MtInfoWindow title={\'infoTitle\'}><>content</></MtInfoWindow>\n          </MtGeometry>\n        </MtVectorLayer>\n\n        <MtInfoWindow single={false} title={\'infoTitle\'}><>content</></MtInfoWindow>\n      </MtMap>\n    </div>\n  )\n}\n\n')))}u.isMDXComponent=!0}}]);