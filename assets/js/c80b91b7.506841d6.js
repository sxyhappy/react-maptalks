(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[258],{5318:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return y}});var r=t(7378);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),y=o,g=m["".concat(l,".").concat(y)]||m[y]||u[y]||i;return t?r.createElement(g,a(a({ref:n},p),{},{components:t})):r.createElement(g,a({ref:n},p))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1061:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var r=t(9603),o=t(120),i=(t(7378),t(5318)),a=["components"],c={sidebar_label:"Polygon",sidebar_position:6},l={unversionedId:"components/geometries/polygon",id:"components/geometries/polygon",isDocsHomePage:!1,title:"Polygon",description:"Example",source:"@site/docs/components/geometries/polygon.mdx",sourceDirName:"components/geometries",slug:"/components/geometries/polygon",permalink:"/react-maptalks/docs/components/geometries/polygon",editUrl:"https://github.com/sxyhappy/react-maptalks/blob/master/docs/docs/components/geometries/polygon.mdx",version:"current",sidebar_label:"Polygon",sidebarPosition:6,frontMatter:{sidebar_label:"Polygon",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"LineString",permalink:"/react-maptalks/docs/components/geometries/line-string"},next:{title:"Rectangle",permalink:"/react-maptalks/docs/components/geometries/rectangle"}},s=[{value:"Example",id:"example",children:[]}],p={toc:s};function u(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live=true",live:"true"},"function PolygonExample() {\n  const view = { center: [-0.113049,51.49856], pitch: 0, zoom: 14 };\n  const [visible, setVisible] = useState(true);\n  const polygonConfig = {\n    symbol: {\n      'lineColor' : '#34495e',\n      'lineWidth' : 2,\n      'polygonFill' : 'rgb(135,196,240)',\n      'polygonOpacity' : 0.6\n    },\n    coordinates: [\n      [\n        [-0.131049, 51.498568],\n        [-0.107049, 51.498568],\n        [-0.107049, 51.493568],\n        [-0.131049, 51.493568],\n        [-0.131049, 51.498568]\n      ]\n    ],\n  }\n\n  return (\n    <>\n      <button onClick={() => setVisible(!visible)}>change visible</button>\n      <MtMap {...view} style={{height: 400}}>\n        <MtTileLayer\n          id={\"base\"}\n          urlTemplate=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n          subdomains={['a','b','c','d']}\n          attribution={'&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'}\n        />\n\n        <MtVectorLayer id={'vector'}>\n          <MtPolygon {...polygonConfig} visible={visible} />\n        </MtVectorLayer>\n      </MtMap>\n    </>\n  )\n}\n\n")))}u.isMDXComponent=!0}}]);